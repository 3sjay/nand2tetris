// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    // creating the not-sel's
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);

    // s1 == s2
    And(a=notsel2, b=notsel1, out=s1);
    // s3 == s4
    And(a=notsel2, b=sel[1], out=s3);
    // s5 == s6
    And(a=sel[2], b=notsel1, out=s5);
    // s7 == s8
    And(a=sel[2], b=sel[1], out=s7);

    And16Out(a=s1, b=notsel0, out=x1);
    And16Out(a=s1, b=sel[0], out=x2);
    And16Out(a=s3, b=notsel0, out=x3);
    And16Out(a=s3, b=sel[0], out=x4);
    And16Out(a=s5, b=notsel0, out=x5);
    And16Out(a=s5, b=sel[0], out=x6);
    And16Out(a=s7, b=notsel0, out=x7);
    And16Out(a=s7, b=sel[0], out=x8);

    And16(a=x1, b=a, out=y0);
    And16(a=x2, b=b, out=y1);
    And16(a=x3, b=c, out=y2);
    And16(a=x4, b=d, out=y3);
    And16(a=x5, b=e, out=y4);
    And16(a=x6, b=f, out=y5);
    And16(a=x7, b=g, out=y6);
    And16(a=x8, b=h, out=y7);

    Or8Way16(a=y0, b=y1, c=y2, d=y3, e=y4, f=y5, g=y6, h=y7, out=out);
    
}
