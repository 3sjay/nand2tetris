// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    // current problem if both are 0
    // if 00 or 01 then ramload, if 10 then screenload, 11 => 0 both
    DMux4Way(in=load, sel=address[13..14], a=ramload1, b=ramload2, c=screenload, d=notused);
    Or(a=ramload1, b=ramload2, out=ramload);

    // 16K RAM (address will only take 14 bits) check the 15th bit to "tunnel" the input to the correct chip?
    // if addr >= 0 or addr <= 11111111111111
    //  -> so if the two MSB bits are 0 we use the RAM16K
    RAM16K(in=in, load=ramload, address=address[0..13], out=ramout);

    // Screen
    // if addr >= 100000000000000 or addr <= 101111111111111
    //  -> so if the two MSB bits are 01 we use the Screen
    Screen(in=in, load=screenload, address=address[0..12], out=screenout);

    // Keyboard
    // if addr == 110000000000000 (length 15)
    //  -> so if the two MSB are 1's we use the Keyboard
    Keyboard(out=kbdout);

    Xor16(a=in, b=in, out=zeros);
    Mux4Way16(a=ramout, b=ramout, c=screenout, d=kbdout, sel=address[13..14], out=out);

}
